README
_________________________________________________________________

SIMULATION FILES:
_________________________________________________________________

General Simulation Pipeline files: 

add_random_accession.py:
adds rs values to the vcf file (slim outputs a “.” )

input:	vcf
output: vcf

allele_freq.py: 
calculates the frequency of each allele

input:	vcf file
output: a file with each SNP and its corresponding frequency (need to > to file.freqs)

pheno_sim.py: 
simulates phenotype values for a quantitative trait under a normal distribution. The two populations will have a specified difference in means of the trait. 

input:	3 arguments —> number of diploid individuals in a population 1, number of diploid individuals in population 2, difference in means
output: each individual and its corresponding quantitative phenotype value

reformat_plink_assoc_REAL_FINAL.py:
reformats the plink file to a more readable format (used for plotting data, but not really necessary for calculating heritability)

input: plink assoc.linear file
output: assoc file with ‘.ldsc’ at the end

_________________________________________________________________

Neutral Simulations (simulations in msprime):

mig_div_msprime_sims.py:
msprime simulation file 

input:	4 arguments: number of iterations, migration rate, divergence time, number of diploid individuals to begin with (ours is 10000)
output: 1 for each in the number of iterations  vcf and frequency file

mig_div_msprime_sims.sh:
whole pipeline file for neutral simulations

input: 4 arguments: number of iterations, migration rate, divergence time, number of diploid individuals in a single population.
output: 1 for each iteration  vcf, plink bfile, plink association file, plink association file reformatted, frequency file, ldscore file, simulated phenotype values with a difference in means of 0.2, 0.5, and 1, covariate (eigenvec) file, eigenval file

_________________________________________________________________

Positive Directional Selection Simulations (simulations in SLiM):

positive_directional_selection.slim:
slim simulation file

input: /path/to/slim_build/slim -d sel_coeff=$SEL_COEFF -d mig_rate=$MIG_RATE -d sim_count=$x  /path/to/positive_directional_selection.slim
output: vcf

positive_directional_selection.sh:
whole pipeline for positive directional selection simulations

input: 4 arguments: number of iterations, migration rate, selection coefficient, number of diploid individuals in a single population.
output: 1 for each iteration  vcf, plink bfile, plink association file, plink association file reformatted, frequency file, ldscore file, simulated phenotype values with a difference in means of 0.2, 0.5, and 1, covariate (eigenvec) file, eigenval file

_________________________________________________________________

HERITABILITY FILES:
_________________________________________________________________

General Heritability Pipeline files: 

reformat_plink_assoc_MUNGE.py: 

input:	assoc.linear.csv.filt (file created after make_assoc_csv and filter_by_freqs)
output: assoc.linear.csv.filt.sumstats 

add_m_vals.py
adds up the values from both the l2.M_5_50 and l2.M files

input:	2 arguments (the same) —> l2.M_5_50, l2.M_5_50 OR l2.M, l2.M
output: a new l2.M_5_50 or l2.M file with the added integer (*_appended.l2.M_5_50 or *_appended.l2.M)

make_assoc_csv.py:
	
input: plink assoc linear file
output: assoc linear csv (changes deliminator for future analyses)
_________________________________________________________________

Neutral Heritability: 

mig_div_h2_100.sh
	
input:	5 arguments —> migration rate, divergence time, difference in means, number of iterations, sample size (ours is 20000)
output: ‘.h2’ file which includes (chi squared value, heritability, intercept, standard error of heritability, standard error of intercept)
*can ignore the other files outputted (they are used to get this final file which is the one we care about and will use for plotting and further analysis) 

filter_by_freqs_struc.py
	
input:	2 arguments —> assoc.linear.csv (from make_assoc_csv) and ‘.freqs’ file from simulation pipeline
output: assoc.linear.csv.filt (will be input to reformat_plink_assoc_MUNGE.py)

mig_div_change_rs_FILT.sh
	
input:	3 arguments —> migration rate, divergence time, difference in means
output: 1 for each iteration (just showing first iteration) —> 
mig_${MIG_RATE}_div_${DIV_TIME}_dm_${DIFF_MEANS}_toappend.i_1.assoc.linear.csv.filt.sumstats: the sumstats file you will add onto one giant file
mig_${MIG_RATE}_div_${DIV_TIME}_toappend.i_1.l2.ldscore: the ldscores you will add into one giant file

_________________________________________________________________

Positive Directional Selection Heritability: 

pdsel_h2_100.sh
	
input:	4 arguments —> selection coefficient, difference in means, number of iterations, sample size (ours is 20000)
output: ‘.h2’ file which includes (chi squared value, heritability, intercept, standard error of heritability, standard error of intercept)
*can ignore the other files outputted (they are used to get this final file which is the one we care about and will use for plotting and further analysis) 

filter_by_freqs_sel.py
	
input:	2 arguments —> assoc.linear.csv (from make_assoc_csv) and ‘.freqs’ file from simulation pipeline
output: assoc.linear.csv.filt (will be input to reformat_plink_assoc_MUNGE.py)

pdsel_change_rs_FILT.sh
	
input:	2 arguments —> selection coefficient and difference in means 
output: 1 for each iteration (just showing first iteration) —> 
sel_${SEL_COEFF}_dm_${DIFF_MEANS}_toappend.i_1.assoc.linear.csv.filt.sumstats: the sumstats file you will add onto one giant file
sel_${SEL_COEFF}_toappend.i_1.l2.ldscore: the ldscores you will add into one giant file

_________________________________________________________________

